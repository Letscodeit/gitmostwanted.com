build:
  box: python:3.4

  steps:
    - script:
      name: artifacts
      code: |-
        cp -R "$WERCKER_SOURCE_DIR/gitmostwanted" "$WERCKER_OUTPUT_DIR"
        cp -R "$WERCKER_SOURCE_DIR/migration" "$WERCKER_OUTPUT_DIR"
        cp "$WERCKER_SOURCE_DIR/alembic.ini" "$WERCKER_OUTPUT_DIR"
        cp "$WERCKER_SOURCE_DIR/requirements.txt" "$WERCKER_OUTPUT_DIR"

    - pip-install:
      packages_list: pip pytest-pep8 pytest-cov==1.8.1 responses coveralls

    - script:
      name: py.test
      code: py.test --pep8 --cov . --cov-report annotate gitmostwanted tests/unit

    - script:
      name: transfer code coverage
      code: coveralls

deploy:
  box:
    id: alpine:latest
    cmd: /bin/sh

  steps:
    - script:
      name: os dependencies
      code: |-
        apk update
        apk add bash openssh rsync

    - add-to-known_hosts:
      local: true
      hostname: gitmostwanted.com
      fingerprint: db:fb:9d:0c:f2:fd:bf:04:9f:da:f9:ad:70:b3:a0:6e

    - add-ssh-key:
      keyname: SSH_KEY
      host: gitmostwanted.com

    - script:
      name: source-code upload
      code: |-
        rsync -e ssh -az --delete-after ./gitmostwanted gitmostwanted@gitmostwanted.com:"$PROJECT_SOURCE_DIR"
        rsync -e ssh -az --delete-after ./migration gitmostwanted@gitmostwanted.com:"$PROJECT_SOURCE_DIR"
        rsync -e ssh -az ./alembic.ini gitmostwanted@gitmostwanted.com:"$PROJECT_SOURCE_DIR"
        rsync -e ssh -az ./requirements.txt gitmostwanted@gitmostwanted.com:"$PROJECT_SOURCE_DIR"

    - script:
      name: requirements
      code: ssh gitmostwanted@gitmostwanted.com "source ~/.venv.sh; cd $PROJECT_SOURCE_DIR; pip install -r requirements.txt"

    - script:
      name: migrations
      code: ssh gitmostwanted@gitmostwanted.com "source ~/.venv.sh; cd $PROJECT_SOURCE_DIR; alembic upgrade head"

    - script:
      name: reload services
      code: |
        ssh gitmostwanted@gitmostwanted.com "touch $PROJECT_SOURCE_DIR/gitmostwanted.com.wsgi"
        ssh gitmostwanted@gitmostwanted.com "(cat $PROJECT_SOURCE_DIR/celery.pid | xargs kill -15) &>/dev/null || true"
