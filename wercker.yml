box: wercker/python
build:
    steps:
        - virtualenv:
            name: virtual environment
            python_location: /usr/bin/python3.4
        - script:
            name: artifacts
            code: |-
              rsync -az "$WERCKER_SOURCE_DIR/gitmostwanted" "$WERCKER_OUTPUT_DIR"
              rsync -az "$WERCKER_SOURCE_DIR/migration" "$WERCKER_OUTPUT_DIR"
              rsync -az "$WERCKER_SOURCE_DIR/alembic.ini" "$WERCKER_OUTPUT_DIR"
        - pip-install:
            packages_list: pytest-pep8 pytest-cov==1.8.1 responses scrutinizer-ocular
        - script:
            name: py.test
            code: py.test --pep8 --cov . --cov-report annotate gitmostwanted tests/unit
        - script:
            name: transfer code coverage to scrutinizer
            code: ocular --data-file .coverage --repository "g/kkamkou/gitmostwanted.com"
deploy:
    steps:
        - add-to-known_hosts:
            local: true
            hostname: gitmostwanted.com
            fingerprint: 97:f6:e7:04:ad:fd:23:b9:70:af:cd:7e:c4:47:6a:8c
        - add-ssh-key:
            keyname: SSH_KEY
            host: gitmostwanted.com
        - script:
            name: source-code upload
            code: |-
              rsync -az --delete-after ./gitmostwanted gitmostwanted@gitmostwanted.com:"$PROJECT_SOURCE_DIR"
              rsync -az --delete-after ./migration gitmostwanted@gitmostwanted.com:"$PROJECT_SOURCE_DIR"
              rsync -az ./alembic.ini gitmostwanted@gitmostwanted.com:"$PROJECT_SOURCE_DIR"
        - script:
            name: migrations
            code: ssh gitmostwanted@gitmostwanted.com "source ~/.venv.sh; cd $PROJECT_SOURCE_DIR; alembic upgrade head"
        - script:
            name: reload services
            code: |
                ssh gitmostwanted@gitmostwanted.com touch "$PROJECT_SOURCE_DIR/gitmostwanted.com.wsgi"
                ssh gitmostwanted@gitmostwanted.com '(kill -15 `cat "$PROJECT_SOURCE_DIR/celery.pid"`) &>/dev/null || true'

