box: wercker/python
build:
    steps:
        - virtualenv:
            name: virtual environment
            python_location: /usr/bin/python3.4
        - script:
            name: artifacts
            code: |-
              rsync -az "$WERCKER_SOURCE_DIR/gitmostwanted" "$WERCKER_OUTPUT_DIR"
              rsync -az "$WERCKER_SOURCE_DIR/migration" "$WERCKER_OUTPUT_DIR"
              rsync -az "$WERCKER_SOURCE_DIR/alembic.ini" "$WERCKER_OUTPUT_DIR"
        - pip-install:
            packages_list: pytest-pep8 pytest-cov scrutinizer-ocular
        - script:
            name: py.test
            code: py.test --pep8 --clearcache --cov . --cov-report annotate gitmostwanted tests/unit
        - script:
            name: transfer code coverage to scrutinizer
            code: ocular --data-file .coverage --repository github.com/kkamkou/gitmostwanted.com
deploy:
    steps:
        - add-to-known_hosts:
            local: true
            hostname: gitmostwanted.com
            fingerprint: 97:f6:e7:04:ad:fd:23:b9:70:af:cd:7e:c4:47:6a:8c
        - mktemp:
            envvar: SSH_KEY_PATH
        - create-file:
            name: write key
            content: $SSH_KEY_PRIVATE
            filename: $SSH_KEY_PATH
            overwrite: true
            hide-from-log: true
        - script:
            name: source-code upload
            code: |-
              rsync -az --delete-after -e "ssh -i $SSH_KEY_PATH" "./gitmostwanted" gitmostwanted@gitmostwanted.com:"$PROJECT_SOURCE_DIR"
              rsync -az --delete-after -e "ssh -i $SSH_KEY_PATH" "./migration" gitmostwanted@gitmostwanted.com:"$PROJECT_SOURCE_DIR"
              rsync -az -e "ssh -i $SSH_KEY_PATH" "./alembic.ini" gitmostwanted@gitmostwanted.com:"$PROJECT_SOURCE_DIR"
              ssh -i "$SSH_KEY_PATH" gitmostwanted@gitmostwanted.com "source ~/.venv.sh; cd $PROJECT_SOURCE_DIR; alembic upgrade head"
              ssh -i "$SSH_KEY_PATH" gitmostwanted@gitmostwanted.com touch "$PROJECT_SOURCE_DIR/gitmostwanted.com.wsgi"
